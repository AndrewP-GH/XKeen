// Reverse Proxy
// *По умолчанию в Reverse Proxy включен Mux.
//
// Обратный прокси - это посредник между Вашими клиентом и сервером. 
//
// Популярные сценарии использования:
// 1. Провайдер заблокировал IP адрес Вашего VPS
// 2. Повышение анонимности, путем сокрытие Вашего IP от VPS
// 3. Балансировка нагрузки
// *  Пример: можно арендовать 5 бюджетных VPS с канальной скоростью 100мб/c.
//     Затем объединить их доменным именем и результирующая канальная скорость будет 500мб/c. 
//
// Reverse Proxy требует настройки Bridges и Portals вместе.
//
// Для использования Reverse Proxy обязательно индивидуально настраиваются:
// 1. 07_inbounds.json — Входящие соединения 
// 2. 08_outbounds.json — Исходящие соединения
// 3. 10_routing.json — Маршрутизация трафика
//
// ** Настройка соединения Portal > VPS делается индивидуальной конфигурацией и не описана в Reverse Proxy.
// *** В случае использования балансировщика нагрузки или Ngnix/Caddy — в качестве Portal выступает доменное имя.
//
###############################################################################################
//
// 1. Bridges — способ установки соединения клиента с порталом.
//
// "tag" — тег Вашего моста.
// Используется для маркировки конкретной секции и связи ее с другим блоком конфигурации.
// Пример записи: "tag": "my_bridge_1"
//
// "domain" — домен или поддомен, который будет использоваться только для установки соединения между Bridge и Portal. 
// В классическом сценарии выступает в качестве идентификатора. В этом случае не должен существовать в интернете.
//
// Можно использовать с Ngnix/Caddy на портале. В таком случае домен должен существовать и быть привязанным к серверу Ngnix/Caddy.
// Можно использовать в качестве балансировки нагрузки. В таком случае домен должен существовать и к нему можно привязать множество разных VPS.
// 
// Пример записи: "domain": "my.secret.domain"
//
// Для Bridges обязательно индивидуально настраиваются:
// 1. 08_outbounds.json — Исходящие соединения
// 2. 10_routing.json — Маршрутизация трафика
//
###############################################################################################
//
// 2. Portals — посредник между клиентом и VPS.
//
// "tag" — тег Вашего портала.
// Используется для маркировки конкретной секции и связи ее с другим блоком конфигурации.
// Пример записи: "tag": "my_portal_1"
//
// "domain"  — домен или поддомен, который будет использоваться только для установки соединения между Bridge и Portal. 
// В классическом сценарии выступает в качестве идентификатора. В этом случае не должен существовать в интернете.
// 
// Можно использовать с Ngnix/Caddy. В таком случае домен должен существовать. Нужно привязать портал к Вашему домену.
// Можно использовать в качестве балансировки нагрузки. В таком случае домен должен существовать. К нему можно привязать портал.
//
// Пример записи: "domain": "my.secret.domain"
//
// Для Portals обязательно индивидуально настраиваются:
// 1. 07_inbounds.json — Входящие соединения
// 2. 10_routing.json — Маршрутизация трафика
//
###############################################################################################
//
// 1. Мост

{
//  "bridges": [
//    {
//      "tag": "my_bridge_1",
//      "domain": "my.secret.domain" // Должен совпадать с Portal
//    }
//  ]
}

// 2. Портал
{
//  "portals": [
//    {
//      "tag": "my_portal_1",
//      "domain": "my.secret.domain" // Должен совпадать с Bridge
//    }
//  ]
}
